import { ScriptBuilderError } from './error';

/**
 * Class representing the opcodes used in the script.
 */
class OpCodes {
  public static readonly OpFalse = 0x00;
  public static readonly Op0 = 0x00;
  public static readonly OpData1 = 0x01;
  public static readonly OpData2 = 0x02;
  public static readonly OpData3 = 0x03;
  public static readonly OpData4 = 0x04;
  public static readonly OpData5 = 0x05;
  public static readonly OpData6 = 0x06;
  public static readonly OpData7 = 0x07;
  public static readonly OpData8 = 0x08;
  public static readonly OpData9 = 0x09;
  public static readonly OpData10 = 0x0a;
  public static readonly OpData11 = 0x0b;
  public static readonly OpData12 = 0x0c;
  public static readonly OpData13 = 0x0d;
  public static readonly OpData14 = 0x0e;
  public static readonly OpData15 = 0x0f;
  public static readonly OpData16 = 0x10;
  public static readonly OpData17 = 0x11;
  public static readonly OpData18 = 0x12;
  public static readonly OpData19 = 0x13;
  public static readonly OpData20 = 0x14;
  public static readonly OpData21 = 0x15;
  public static readonly OpData22 = 0x16;
  public static readonly OpData23 = 0x17;
  public static readonly OpData24 = 0x18;
  public static readonly OpData25 = 0x19;
  public static readonly OpData26 = 0x1a;
  public static readonly OpData27 = 0x1b;
  public static readonly OpData28 = 0x1c;
  public static readonly OpData29 = 0x1d;
  public static readonly OpData30 = 0x1e;
  public static readonly OpData31 = 0x1f;
  public static readonly OpData32 = 0x20;
  public static readonly OpData33 = 0x21;
  public static readonly OpData34 = 0x22;
  public static readonly OpData35 = 0x23;
  public static readonly OpData36 = 0x24;
  public static readonly OpData37 = 0x25;
  public static readonly OpData38 = 0x26;
  public static readonly OpData39 = 0x27;
  public static readonly OpData40 = 0x28;
  public static readonly OpData41 = 0x29;
  public static readonly OpData42 = 0x2a;
  public static readonly OpData43 = 0x2b;
  public static readonly OpData44 = 0x2c;
  public static readonly OpData45 = 0x2d;
  public static readonly OpData46 = 0x2e;
  public static readonly OpData47 = 0x2f;
  public static readonly OpData48 = 0x30;
  public static readonly OpData49 = 0x31;
  public static readonly OpData50 = 0x32;
  public static readonly OpData51 = 0x33;
  public static readonly OpData52 = 0x34;
  public static readonly OpData53 = 0x35;
  public static readonly OpData54 = 0x36;
  public static readonly OpData55 = 0x37;
  public static readonly OpData56 = 0x38;
  public static readonly OpData57 = 0x39;
  public static readonly OpData58 = 0x3a;
  public static readonly OpData59 = 0x3b;
  public static readonly OpData60 = 0x3c;
  public static readonly OpData61 = 0x3d;
  public static readonly OpData62 = 0x3e;
  public static readonly OpData63 = 0x3f;
  public static readonly OpData64 = 0x40;
  public static readonly OpData65 = 0x41;
  public static readonly OpData66 = 0x42;
  public static readonly OpData67 = 0x43;
  public static readonly OpData68 = 0x44;
  public static readonly OpData69 = 0x45;
  public static readonly OpData70 = 0x46;
  public static readonly OpData71 = 0x47;
  public static readonly OpData72 = 0x48;
  public static readonly OpData73 = 0x49;
  public static readonly OpData74 = 0x4a;
  public static readonly OpData75 = 0x4b;
  public static readonly OpPushData1 = 0x4c;
  public static readonly OpPushData2 = 0x4d;
  public static readonly OpPushData4 = 0x4e;
  public static readonly Op1Negate = 0x4f;
  public static readonly OpReserved = 0x50;
  public static readonly OpTrue = 0x51;
  public static readonly Op1 = 0x51;
  public static readonly Op2 = 0x52;
  public static readonly Op3 = 0x53;
  public static readonly Op4 = 0x54;
  public static readonly Op5 = 0x55;
  public static readonly Op6 = 0x56;
  public static readonly Op7 = 0x57;
  public static readonly Op8 = 0x58;
  public static readonly Op9 = 0x59;
  public static readonly Op10 = 0x5a;
  public static readonly Op11 = 0x5b;
  public static readonly Op12 = 0x5c;
  public static readonly Op13 = 0x5d;
  public static readonly Op14 = 0x5e;
  public static readonly Op15 = 0x5f;
  public static readonly Op16 = 0x60;
  public static readonly OpNop = 0x61;
  public static readonly OpVer = 0x62;
  public static readonly OpIf = 0x63;
  public static readonly OpNotIf = 0x64;
  public static readonly OpVerIf = 0x65;
  public static readonly OpVerNotIf = 0x66;
  public static readonly OpElse = 0x67;
  public static readonly OpEndIf = 0x68;
  public static readonly OpVerify = 0x69;
  public static readonly OpReturn = 0x6a;
  public static readonly OpToAltStack = 0x6b;
  public static readonly OpFromAltStack = 0x6c;
  public static readonly Op2Drop = 0x6d;
  public static readonly Op2Dup = 0x6e;
  public static readonly Op3Dup = 0x6f;
  public static readonly Op2Over = 0x70;
  public static readonly Op2Rot = 0x71;
  public static readonly Op2Swap = 0x72;
  public static readonly OpIfDup = 0x73;
  public static readonly OpDepth = 0x74;
  public static readonly OpDrop = 0x75;
  public static readonly OpDup = 0x76;
  public static readonly OpNip = 0x77;
  public static readonly OpOver = 0x78;
  public static readonly OpPick = 0x79;
  public static readonly OpRoll = 0x7a;
  public static readonly OpRot = 0x7b;
  public static readonly OpSwap = 0x7c;
  public static readonly OpTuck = 0x7d;
  public static readonly OpCat = 0x7e;
  public static readonly OpSubStr = 0x7f;
  public static readonly OpLeft = 0x80;
  public static readonly OpRight = 0x81;
  public static readonly OpSize = 0x82;
  public static readonly OpInvert = 0x83;
  public static readonly OpAnd = 0x84;
  public static readonly OpOr = 0x85;
  public static readonly OpXor = 0x86;
  public static readonly OpEqual = 0x87;
  public static readonly OpEqualVerify = 0x88;
  public static readonly OpReserved1 = 0x89;
  public static readonly OpReserved2 = 0x8a;
  public static readonly Op1Add = 0x8b;
  public static readonly Op1Sub = 0x8c;
  public static readonly Op2Mul = 0x8d;
  public static readonly Op2Div = 0x8e;
  public static readonly OpNegate = 0x8f;
  public static readonly OpAbs = 0x90;
  public static readonly OpNot = 0x91;
  public static readonly Op0NotEqual = 0x92;
  public static readonly OpAdd = 0x93;
  public static readonly OpSub = 0x94;
  public static readonly OpMul = 0x95;
  public static readonly OpDiv = 0x96;
  public static readonly OpMod = 0x97;
  public static readonly OpLShift = 0x98;
  public static readonly OpRShift = 0x99;
  public static readonly OpBoolAnd = 0x9a;
  public static readonly OpBoolOr = 0x9b;
  public static readonly OpNumEqual = 0x9c;
  public static readonly OpNumEqualVerify = 0x9d;
  public static readonly OpNumNotEqual = 0x9e;
  public static readonly OpLessThan = 0x9f;
  public static readonly OpGreaterThan = 0xa0;
  public static readonly OpLessThanOrEqual = 0xa1;
  public static readonly OpGreaterThanOrEqual = 0xa2;
  public static readonly OpMin = 0xa3;
  public static readonly OpMax = 0xa4;
  public static readonly OpWithin = 0xa5;
  public static readonly OpUnknown166 = 0xa6;
  public static readonly OpUnknown167 = 0xa7;
  public static readonly OpSHA256 = 0xa8;
  public static readonly OpCheckMultiSigECDSA = 0xa9;
  public static readonly OpBlake2b = 0xaa;
  public static readonly OpCheckSigECDSA = 0xab;
  public static readonly OpCheckSig = 0xac;
  public static readonly OpCheckSigVerify = 0xad;
  public static readonly OpCheckMultiSig = 0xae;
  public static readonly OpCheckMultiSigVerify = 0xaf;
  public static readonly OpCheckLockTimeVerify = 0xb0;
  public static readonly OpCheckSequenceVerify = 0xb1;
  public static readonly OpTxVersion = 0xb2;
  public static readonly OpTxInputCount = 0xb3;
  public static readonly OpTxOutputCount = 0xb4;
  public static readonly OpTxLockTime = 0xb5;
  public static readonly OpTxSubnetId = 0xb6;
  public static readonly OpTxGas = 0xb7;
  public static readonly OpTxPayload = 0xb8;
  public static readonly OpTxInputIndex = 0xb9;
  public static readonly OpOutpointTxId = 0xba;
  public static readonly OpOutpointIndex = 0xbb;
  public static readonly OpTxInputScriptSig = 0xbc;
  public static readonly OpTxInputSeq = 0xbd;
  public static readonly OpTxInputAmount = 0xbe;
  public static readonly OpTxInputSpk = 0xbf;
  public static readonly OpTxInputBlockDaaScore = 0xc0;
  public static readonly OpTxInputIsCoinbase = 0xc1;
  public static readonly OpTxOutputAmount = 0xc2;
  public static readonly OpTxOutputSpk = 0xc3;
  public static readonly OpUnknown196 = 0xc4;
  public static readonly OpUnknown197 = 0xc5;
  public static readonly OpUnknown198 = 0xc6;
  public static readonly OpUnknown199 = 0xc7;
  public static readonly OpUnknown200 = 0xc8;
  public static readonly OpUnknown201 = 0xc9;
  public static readonly OpUnknown202 = 0xca;
  public static readonly OpUnknown203 = 0xcb;
  public static readonly OpUnknown204 = 0xcc;
  public static readonly OpUnknown205 = 0xcd;
  public static readonly OpUnknown206 = 0xce;
  public static readonly OpUnknown207 = 0xcf;
  public static readonly OpUnknown208 = 0xd0;
  public static readonly OpUnknown209 = 0xd1;
  public static readonly OpUnknown210 = 0xd2;
  public static readonly OpUnknown211 = 0xd3;
  public static readonly OpUnknown212 = 0xd4;
  public static readonly OpUnknown213 = 0xd5;
  public static readonly OpUnknown214 = 0xd6;
  public static readonly OpUnknown215 = 0xd7;
  public static readonly OpUnknown216 = 0xd8;
  public static readonly OpUnknown217 = 0xd9;
  public static readonly OpUnknown218 = 0xda;
  public static readonly OpUnknown219 = 0xdb;
  public static readonly OpUnknown220 = 0xdc;
  public static readonly OpUnknown221 = 0xdd;
  public static readonly OpUnknown222 = 0xde;
  public static readonly OpUnknown223 = 0xdf;
  public static readonly OpUnknown224 = 0xe0;
  public static readonly OpUnknown225 = 0xe1;
  public static readonly OpUnknown226 = 0xe2;
  public static readonly OpUnknown227 = 0xe3;
  public static readonly OpUnknown228 = 0xe4;
  public static readonly OpUnknown229 = 0xe5;
  public static readonly OpUnknown230 = 0xe6;
  public static readonly OpUnknown231 = 0xe7;
  public static readonly OpUnknown232 = 0xe8;
  public static readonly OpUnknown233 = 0xe9;
  public static readonly OpUnknown234 = 0xea;
  public static readonly OpUnknown235 = 0xeb;
  public static readonly OpUnknown236 = 0xec;
  public static readonly OpUnknown237 = 0xed;
  public static readonly OpUnknown238 = 0xee;
  public static readonly OpUnknown239 = 0xef;
  public static readonly OpUnknown240 = 0xf0;
  public static readonly OpUnknown241 = 0xf1;
  public static readonly OpUnknown242 = 0xf2;
  public static readonly OpUnknown243 = 0xf3;
  public static readonly OpUnknown244 = 0xf4;
  public static readonly OpUnknown245 = 0xf5;
  public static readonly OpUnknown246 = 0xf6;
  public static readonly OpUnknown247 = 0xf7;
  public static readonly OpUnknown248 = 0xf8;
  public static readonly OpUnknown249 = 0xf9;
  public static readonly OpSmallInteger = 0xfa;
  public static readonly OpPubKeys = 0xfb;
  public static readonly OpUnknown252 = 0xfc;
  public static readonly OpPubKeyHash = 0xfd;
  public static readonly OpPubKey = 0xfe;
  public static readonly OpInvalidOpCode = 0xff;
}

/**
 * Internal method to check if the opcode is within the valid range.
 */
/**
 * Checks if the opcode is within the valid range (0-255).
 *
 * @param {number} opcode - The opcode to check.
 * @throws {ScriptBuilderError} If the opcode is out of range.
 */
function checkOpcodeRange(opcode: number): void {
  if (opcode < 0 || opcode > 255) {
    throw new ScriptBuilderError(`Opcode ${opcode} is out of range. Must be between 0 and 255.`);
  }
}

export { OpCodes, checkOpcodeRange };
